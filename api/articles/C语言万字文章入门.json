{"title":"C语言，万字入门","uid":"20fa7a80c246c3a1e3b3bbe114dc196d","slug":"C语言万字文章入门","date":"2023-02-18T13:18:50.000Z","updated":"2023-04-19T08:18:14.188Z","comments":true,"path":"api/articles/C语言万字文章入门.json","keywords":null,"cover":"/photos/blog2.jpg","content":"<meta name=\"referrer\" content=\"no-referrer\" />\n\n\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><pre class=\"line-numbers language-none\"><code class=\"language-none\">🐰作者简介：一位普通高校的在校学生，致力于提高自己的编程能力。\n🍌个人主页：[比昨天强一點的博客_CSDN博客-领域博主](https:&#x2F;&#x2F;c-p-p.blog.csdn.net&#x2F; &quot;比昨天强一點的博客_CSDN博客-领域博主&quot;)\n🍍系列专栏：[C语言从0到精通_比昨天强一點的博客-CSDN博客](https:&#x2F;&#x2F;blog.csdn.net&#x2F;m0_63125842&#x2F;category_12057278.html &quot;C语言从0到精通_比昨天强一點的博客-CSDN博客&quot;)\n🏷️学习格言：无人问津的日子，最是提高自己的好时机。</code></pre></blockquote>\n<hr>\n<p>**        本章目的：希望你能通过这篇文章基本了解C语言，但是不会太深入讲解，C语言进阶将会在本专栏后续文章中。**</p>\n<h1 id=\"1-什么是C语言\"><a href=\"#1-什么是C语言\" class=\"headerlink\" title=\"1.什么是C语言\"></a>1.什么是C语言</h1><pre class=\"line-numbers language-none\"><code class=\"language-none\">语言，顾名思义，应该是用来沟通的，对话的，人与人之间沟通，有用中文、英文等等。而C语言是什么呢，**C**语言其实是程序员与计算机进行沟通而使用的语言之一。</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><pre class=\"line-numbers language-none\"><code class=\"language-none\">C语言是一门通用计算机编程语言，广泛应用于底层开发。C语言的设计目标是提供一种能以简易 的方式编译、处理低级存储器、产生少量的机器码以及不需要任何运行环境支持便能运行的编程语\n\n\n\n 尽管C语言提供了许多低级处理的功能，但仍然保持着良好跨平台的特性，以一个标准规格写出的 C语言程序可在许多电脑平台上进行编译，甚至包含一些嵌入式处理器(单片机或称MCU)以及超级电脑等作业平台。\n\n\n\n 二十世纪八十年代，为了避免各开发厂商用的C语言语法产生差异，由美国国家标准局为C语言制定了一套完整的美国国家标准语法，称为ANSI C，作为C语言最初的标准。 [1] 目前2011年12月8日，国际标准化组织(ISO)和国际电工委员会(IEC)发布的C11标准是C语言的第三个官方标准，也是C语言的最新标准，该标准更好的支持了汉字函数名和汉字标识符，一定程度上实现了汉字编程。\n\n\n\n C语言是一门面向过程的计算机编程语言，与C++，Java等面向对象的编程语言有所不同。 其编译器主要有Clang、GCC、WIN-TC、SUBLIME、MSVC、Turbo C、Clion等，苹、果系统有Xcode等。</code></pre></blockquote>\n<hr>\n<h1 id=\"2-第一个C语言程序\"><a href=\"#2-第一个C语言程序\" class=\"headerlink\" title=\"2.第一个C语言程序\"></a>2.第一个C语言程序</h1><pre class=\"line-numbers language-none\"><code class=\"language-none\">首先欢迎各位新人正式开始成为一位程序猿(![](https:&#x2F;&#x2F;img-blog.csdnimg.cn&#x2F;6b3ab25e329d49f6aa6743d7ade5ba2a.jpeg)![]( &quot;点击并拖拽以移动&quot;)**编辑**)</code></pre>\n\n<p><img src=\"https://img-blog.csdnimg.cn/c8f757f416664edc8ef765ddaf181cc4.png\"></p>\n<p>那么我们来打印输出一个Hello World！（只会Hello World！）</p>\n<p><img src=\"https://img-blog.csdnimg.cn/414801bef0194dfd87f9912d9e6700dc.jpeg\"></p>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">#include &lt;stdio.h&gt;\n\n\nint main()&#123;\n\n\n    printf(&quot;Hello World!&quot;);\n    \n    return 0;\n&#125;\n\n&#x2F;&#x2F;#include &lt;stdio.h&gt; 是头文件\n&#x2F;&#x2F;main是主函数，也是程序的入口，\n&#x2F;&#x2F;一个工程中，main函数有且只有一个</code></pre>\n\n\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">这段代码运行会将 **Hello World！** 打印在屏幕上（如图）</code></pre>\n\n<p><img src=\"https://img-blog.csdnimg.cn/fbb507899c8b4e079fc2825e79e9914d.png\"></p>\n<p>** 是不是很惊喜**</p>\n<p><img src=\"https://img-blog.csdnimg.cn/034496814fa642b4b47428025259f004.jpeg\"></p>\n<hr>\n<h1 id=\"3-数据类型\"><a href=\"#3-数据类型\" class=\"headerlink\" title=\"3.数据类型\"></a>3.数据类型</h1><p>C语言中有七大数据类型</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>1.char           &#x2F;&#x2F;字符数据类型</p>\n<p>2.short          &#x2F;&#x2F;短整形</p>\n<p>3.int              &#x2F;&#x2F;整形</p>\n<p>4.long           &#x2F;&#x2F;长整形</p>\n<p>5.long long   &#x2F;&#x2F;更长的整形</p>\n<p>6.float           &#x2F;&#x2F;单精度浮点型</p>\n<p>7.double       &#x2F;&#x2F;双精度浮点型</p></blockquote>\n<p>为什么有这么多种数据类型呢？</p>\n<p><strong>答：是为了能够丰富的表达生活中的各种值</strong></p>\n<p>每种类型的大小是多少？（多少个字节）</p>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">&#x2F;&#x2F;以32位操作系统为例\n#include &lt;stdio.h&gt;\nint main()&#123;\n\n    printf(&quot;%d\\n&quot;, sizeof(int));           &#x2F;&#x2F;4\n    printf(&quot;%d\\n&quot;, sizeof(char));          &#x2F;&#x2F;1\n    printf(&quot;%d\\n&quot;, sizeof(short));         &#x2F;&#x2F;2\n    printf(&quot;%d\\n&quot;, sizeof(double));        &#x2F;&#x2F;8\n    printf(&quot;%d\\n&quot;, sizeof(float));         &#x2F;&#x2F;4\n    printf(&quot;%d\\n&quot;, sizeof(long long));     &#x2F;&#x2F;8\n    printf(&quot;%d\\n&quot;, sizeof(long));          &#x2F;&#x2F;4 但在64位操作系统占8个字节\n    printf(&quot;%d\\n&quot;, sizeof(long double));   &#x2F;&#x2F;8\n\n    return 0;\n&#125;</code></pre>\n\n\n\n<p>数据类型如何使用呢？(举几个栗子🌰)</p>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">char ch &#x3D; &#39;a&#39;;\n\nint height &#x3D; 180;\n\ndouble wage &#x3D; 58888.0;  &#x2F;&#x2F;这就是大家的月薪🌹</code></pre>\n\n\n\n<hr>\n<h1 id=\"3-变量和常量\"><a href=\"#3-变量和常量\" class=\"headerlink\" title=\"3.变量和常量\"></a>3.变量和常量</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>**        生活中的有些值是不变的(比如:圆周率，性别，身份证号码，血型等等)有些值是可变的(比如：年龄，体重，薪资)不变的值，C语言中用常量的概念来表示，变得值C语言中用变量来表示。**</p></blockquote>\n<h2 id=\"3-1定义变量的方法\"><a href=\"#3-1定义变量的方法\" class=\"headerlink\" title=\"3.1定义变量的方法\"></a>3.1定义变量的方法</h2><pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">int age &#x3D; 18;\nfloat weight &#x3D; 45.5f;\nchar ch &#x3D; &#39;w&#39;;</code></pre>\n\n\n\n<h2 id=\"3-2变量的命名\"><a href=\"#3-2变量的命名\" class=\"headerlink\" title=\"3.2变量的命名\"></a>3.2变量的命名</h2><ul>\n<li><strong>只能由字母(包括大写和小写)、数字和下划线( _ )组成。</strong></li>\n<li><strong>不能以数字开头。</strong></li>\n<li><strong>长度不能超过63个字符。</strong></li>\n<li><strong>变量名中区分大小写的。</strong></li>\n<li><strong>变量名不能使用关键字。</strong></li>\n</ul>\n<h2 id=\"3-3-变量的分类\"><a href=\"#3-3-变量的分类\" class=\"headerlink\" title=\"3.3 变量的分类\"></a>3.3 变量的分类</h2><ul>\n<li><strong>局部变量</strong></li>\n<li><strong>全局变量</strong></li>\n</ul>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">#include &lt;stdio.h&gt;\n\n    \nint global &#x3D; 20; &#x2F;&#x2F;全局变量\n\nint main()&#123;\n\n    int local &#x3D; 10; &#x2F;&#x2F;局部变量\n    int global &#x3D; 30; &#x2F;&#x2F;局部变量（可以与全局变量重名，但是不推荐）\n\n    printf(&quot;%d\\n&quot;,global); &#x2F;&#x2F;打印30，当局部变量与全局变量名一致时，采用局部优先原则。\n\n    return 0; \n\n&#125;</code></pre>\n\n\n\n<h2 id=\"3-4变量的使用\"><a href=\"#3-4变量的使用\" class=\"headerlink\" title=\"3.4变量的使用\"></a>3.4变量的使用</h2><pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">#include &lt;stdio.h&gt;\n\nint mian()&#123;\n\n    int num1 &#x3D; 0; \n    int num2 &#x3D; 0;  \n    int sum &#x3D; 0;  &#x2F;&#x2F;定义变量并初始化值0\n\n    scanf(&quot;%d%d&quot;,&amp;num1,&amp;num2);&#x2F;&#x2F;这是输入函数，可以在运行时自行输入num1，num2的值\n\n    sum &#x3D; num1 + num2; &#x2F;&#x2F;变量之间可以进行各种数学运算。\n    \n    printf(&quot;%d\\n&quot;,sum); &#x2F;&#x2F;假设输入num1为10，num2为20，则输出30。\n    \n    return 0;\n\n&#125;</code></pre>\n\n\n\n<h2 id=\"3-4-变量的作用域和生命周期\"><a href=\"#3-4-变量的作用域和生命周期\" class=\"headerlink\" title=\"3.4 变量的作用域和生命周期\"></a>3.4 变量的作用域和生命周期</h2><p>作用域：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>作用域(scope)是程序设计概念，通常来说，一段程序代码中所用到的名字并不总是有效&#x2F;可用的，而限定这个名字的可用性的代码范围就是这个梗名字的作用域</p>\n<ul>\n<li>局部变量的作用域是变量所在的局部范围。</li>\n<li>全局变量的作用域是整个工程。</li>\n</ul></blockquote>\n<p>生命周期：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>变量的生命周期指的是变量的创建到变量的销毁之间的一个时间段(或者说变量从创建到销毁中间的过程就是变量的整个生命周期)</p>\n<ul>\n<li>局部变量的生命周期是:进入作用域生命周期开始，出作用域生命周期结束。</li>\n<li>全局变量的生命周期是:整个程序的生命周期。</li>\n</ul></blockquote>\n<h2 id=\"3-5常量\"><a href=\"#3-5常量\" class=\"headerlink\" title=\"3.5常量\"></a>3.5常量</h2><p>C语言中的常量和变量的定义的形式有所差异。</p>\n<p>C语言中的常量分为以下以下几种:</p>\n<ul>\n<li>字面常量</li>\n<li>枚举常量</li>\n<li>#define 定义的标识符常量</li>\n<li>const 修饰的常变量</li>\n</ul>\n<p>我们一一举栗🌰</p>\n<p><img src=\"https://img-blog.csdnimg.cn/4e3a20739c7e4bd98df17c3be863b55a.jpeg\"></p>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">#include &lt;stdio.h&gt;\n\n&#x2F;&#x2F;栗子🌰\n\nenmu Sex&#123;\n\n    MALE,    &#x2F;&#x2F;默认值是0\n    FEMALE,  &#x2F;&#x2F;1\n    UNKNOWN  &#x2F;&#x2F;2\n\n&#125;;\n\n&#x2F;&#x2F;括号中的MALE，FEMALE，UNKNOWN是枚举常量\n\n\n&#x2F;&#x2F;define定义的常量\n#define MAX 100 \n\nint main()&#123;\n\n    3.14 &#x2F;&#x2F;字面常量\n\n    &#x2F;&#x2F;const修饰的常变量\n    const float pie &#x3D; 3.14f;&#x2F;&#x2F;这是const修饰的常变量，不能直接修改，但是可以通过指针变量修改（后续会讲，这里不多赘述）\n\n\n\n&#125;</code></pre>\n\n\n\n<hr>\n<h1 id=\"4-字符串-转义字符-注释\"><a href=\"#4-字符串-转义字符-注释\" class=\"headerlink\" title=\"4. 字符串+转义字符+注释\"></a>4. 字符串+转义字符+注释</h1><h2 id=\"4-1-字符串\"><a href=\"#4-1-字符串\" class=\"headerlink\" title=\"4.1 字符串\"></a>4.1 字符串</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>“Hello World!”</p></blockquote>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">这种由双引号，引起来的就是字符串，字符串的结束标志是一个\\0转译字符，在计算字符串长度时\\0是结束标志，不算做字符串内容。</code></pre>\n\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">#include &lt;stdio.h&gt;\n\n\nint main()&#123;\n\n\n    char arr1[] &#x3D; &quot;Hello&quot;;\n    char arr2[] &#x3D; &#123;&#39;H&#39;,&#39;e&#39;,&#39;l&#39;,&#39;l&#39;,&#39;o&#39;&#125;;\n    char arr3[] &#x3D; &#123;&#39;H&#39;,&#39;e&#39;,&#39;l&#39;,&#39;l&#39;,&#39;o&#39;,&#39;\\0&#39;&#125;;\n\n\n    printf(&quot;%s\\n&quot;,arr1);&#x2F;&#x2F;输出 Hello\n    printf(&quot;%s\\n&quot;,arr2);  输出 乱码（因为没有\\0作为结束标志）\n    printf(&quot;%s\\n&quot;,arr3);  输出 Hello\n\n    return 0;\n\n&#125;</code></pre>\n\n\n\n<h2 id=\"4-2转义字符\"><a href=\"#4-2转义字符\" class=\"headerlink\" title=\"4.2转义字符\"></a>4.2转义字符</h2><p>假设我们要在屏幕上打印一个目录: c:\\code\\test.c</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">如下，如果我们这样写代码。</code></pre>\n\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">#include &lt;stdio.h&gt;\n\nint main()&#123;\n\n    printf(&quot;c:\\code\\test.c&quot;);\n\n    return 0;\n&#125;</code></pre>\n\n\n\n<p>当我以为我的代码没问题时……….等等</p>\n<p><img src=\"https://img-blog.csdnimg.cn/8d626e4bc7b64b15b8597c0515800ec9.gif\"></p>\n<p>他居然输出了这样一串</p>\n<p><img src=\"https://img-blog.csdnimg.cn/5024e91edcfd49879cc6dea7926abb61.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/4f03a739bf8649998f3113cb64ec8500.jpeg\"></p>\n<p><strong>这是为什么呢？😭</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">这里就不得不提一下转义字符了。转义字符顾名思义就是转变意思。</code></pre>\n\n<p>下面看一些转义字符。</p>\n<table>\n<thead>\n<tr>\n<th>转义字符</th>\n<th>释义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>?</td>\n<td>在书写连续多个问号时使用，防止他们被解析成三字母词</td>\n</tr>\n<tr>\n<td>&#39;</td>\n<td>用于表示字符常量’</td>\n</tr>\n<tr>\n<td>&quot;</td>\n<td>用于表示一个字符串内部的双引号</td>\n</tr>\n<tr>\n<td>\\a</td>\n<td>警告字符，蜂鸣</td>\n</tr>\n<tr>\n<td>\\b</td>\n<td>退格符</td>\n</tr>\n<tr>\n<td>\\f</td>\n<td>进纸符</td>\n</tr>\n<tr>\n<td>\\n</td>\n<td>换行符</td>\n</tr>\n<tr>\n<td>\\r</td>\n<td>回车</td>\n</tr>\n<tr>\n<td>\\t</td>\n<td>水平制表符</td>\n</tr>\n<tr>\n<td>\\v</td>\n<td>垂直制表符</td>\n</tr>\n<tr>\n<td>\\ddd</td>\n<td>ddd表示1-3个八进制数 如：\\130</td>\n</tr>\n<tr>\n<td>\\xdd</td>\n<td>dd表示1-2个十六进制数 如：\\x5a</td>\n</tr>\n<tr>\n<td>\\</td>\n<td>用于表示一个反斜杠，防止它被解释为一个转义序列符。</td>\n</tr>\n</tbody></table>\n<hr>\n<h1 id=\"5-注释\"><a href=\"#5-注释\" class=\"headerlink\" title=\"5. 注释\"></a>5. 注释</h1><ul>\n<li><ol>\n<li>代码中有不需要的代码可以直接删除，也可以注释掉</li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>代码中有些代码比较难懂，可以加一下注释文字</li>\n</ol>\n</li>\n</ul>\n<p>举几个栗子🌰</p>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">#include &lt;stdio.h&gt;\n\n\n\n\nint mian()&#123;\n\n    int num1 &#x3D; 10;\n    int num2 &#x3D; 20;\n    int sum &#x3D; 0;\n    &#x2F;* C语言注释风格\n    int num1 &#x3D; 10;\n    int num2 &#x3D; 20;\n    *&#x2F;\n\n    \n    sum &#x3D; num1 + sum2; &#x2F;&#x2F;两数相加。C++注释风格\n\n&#125;</code></pre>\n\n\n\n<hr>\n<h1 id=\"6-选择语句\"><a href=\"#6-选择语句\" class=\"headerlink\" title=\"6. 选择语句\"></a>6. 选择语句</h1><p><img src=\"https://img-blog.csdnimg.cn/05e5f8f00fe24e40a5b73aeccf283d5a.webp\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">如果你好好学习，校招时拿一个好offer,赢取白富美，走上人生巅峰。 如果你不学习，毕业等于失业，工地搬砖。 这就是选择!（你看他笑的多开心（![](https:&#x2F;&#x2F;img-blog.csdnimg.cn&#x2F;6b3ab25e329d49f6aa6743d7ade5ba2a.jpeg)![]( &quot;点击并拖拽以移动&quot;)**编辑**））</code></pre>\n\n<p><img src=\"https://img-blog.csdnimg.cn/8627c52404d5435a9a554c7606cb7f99.webp\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/96e1959eaa4941dd85988241f17bfdff.png\"></p>\n<p>来看一段代码，你就知道if-else如何使用了</p>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">#include &lt;stdio.h&gt;\n\nint main()&#123;\n\n\n    int choose &#x3D; 0;\n\n    printf(&quot;你会去敲代码吗？选择1 or 0&quot;);\n\n    scanf(&quot;%d&quot;,&amp;choose);\n\n    if(choose &#x3D;&#x3D; 1)&#123;\n        printf(&quot;老铁，你会有好offer的，我看好你呦\\n&quot;);\n        \n    &#125;else&#123;\n        printf(&quot;早点卷铺盖回家走人，搬砖去吧&quot;);\n    \n    &#125;\n\n    return 0;\n\n\n&#125;</code></pre>\n\n\n\n<hr>\n<h1 id=\"7-循环语句\"><a href=\"#7-循环语句\" class=\"headerlink\" title=\"7.循环语句\"></a>7.循环语句</h1><pre class=\"line-numbers language-none\"><code class=\"language-none\">有些事必须一直做，比如每天都要吃饭，都要睡觉，日复一日，年复一年。</code></pre>\n\n<p>还比如：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/41d88dfcd4764501b2d7e85f84b4a079.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/6796897394c949838ee1dfe45fcac675.webp\"></p>\n<p>C语言循环语句有三种</p>\n<ul>\n<li>for</li>\n<li>while</li>\n<li>do…while</li>\n</ul>\n<p>**    先看代码    **</p>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">#include &lt;stdio.h&gt;\n\nint mian()&#123;\n\n    int line &#x3D; 0;\n\n\n    &#x2F;&#x2F;for循环演示\n    for(line &#x3D; 0; line &lt;&#x3D; 20000;line++)&#123;\n\n        printf(&quot;我要继续努力敲代码\\n&quot;);\n    \n    &#125;\n\n    if(line&gt;20000)&#123;\n\n        printf(&quot;好offer\\n&quot;);\n\n    &#125;\n\n\n    &#x2F;&#x2F;while循环演示\n    while(line &lt;&#x3D; 20000) &#123;\n        line++;\n        printf(&quot;我要继续努力敲代码\\n&quot;);\n    &#125;\n\n    if(line&gt;20000)&#123;\n\n        printf(&quot;好offer\\n&quot;);\n\n    &#125;\n\n\n    &#x2F;&#x2F;do...while循环演示\n    do&#123;\n        line++;\n        printf(&quot;我要继续努力敲代码\\n&quot;);\n    \n    &#125;while(line &lt;&#x3D; 20000);\n    \n    if(line&gt;20000)&#123;\n\n        printf(&quot;好offer\\n&quot;);\n\n    &#125;\n\n    return 0;    \n\n&#125;</code></pre>\n\n\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>总结三种循环的判断方式：举个栗子🌰， 你有一个女朋友，<strong>前两种循环呢</strong>是先判断她是不是你女朋友，是：干羞羞的事情。   不是：走人。 <strong>那么do….while循环呢</strong> 。<strong>是先干羞羞的事情再判断是不是你女朋友（手动dog）是：接着干。不是：赶紧穿上裤子跑路。</strong></p></blockquote>\n<p>****<img src=\"https://img-blog.csdnimg.cn/63299c76ad45471c948efd42e5a66aee.webp\"></p>\n<hr>\n<h1 id=\"8-函数\"><a href=\"#8-函数\" class=\"headerlink\" title=\"8.函数\"></a>8.函数</h1><pre class=\"line-numbers language-none\"><code class=\"language-none\">函数的作用就是将反复使用的代码片段独立出去，这样可以通过调用函数来执行这些代码，可以简化代码，提高代码复用性。\n\n\n\n    栗子🌰</code></pre>\n\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">#include &lt;stdio.h&gt;\n\n\n\nint add(int a, int b)&#123;  &#x2F;&#x2F;int 是函数的返回类型，通过实际需求自行设计，小括号里的是参数，将想要进行求和的数传进函数来\n\n    int sum &#x3D; 0;\n\n    sum &#x3D; a + b;\n\n    return sum;    &#x2F;&#x2F;返回值，需要对应函数的返回类型\n&#125;\n\n\nint main()&#123;\n\n\n    int num1 &#x3D; 10;\n\n    int num2 &#x3D; 20;\n\n    int sum &#x3D; 0;\n\n    sum &#x3D; add(num1, num2);\n    \n    printf(&quot;num1 + num2 &#x3D; %d\\n&quot;,sum);\n\n    return 0;\n\n    \n&#125;</code></pre>\n\n\n\n<hr>\n<h1 id=\"9-数组\"><a href=\"#9-数组\" class=\"headerlink\" title=\"9.数组\"></a>9.数组</h1><pre class=\"line-numbers language-none\"><code class=\"language-none\">假如我们要存储10数据，怎么办呢！\n\n\n\n    有同学说，我们可以定义十次。（int sum1; int sum2;int sum3........）（嗯，可行）但是如果我们要存储一万个数据呢（![](https:&#x2F;&#x2F;img-blog.csdnimg.cn&#x2F;6b3ab25e329d49f6aa6743d7ade5ba2a.jpeg)![]( &quot;点击并拖拽以移动&quot;)**编辑**你要不要看看你在说什么？？？），这个时候就要用到数组了。</code></pre>\n\n<h2 id=\"9-1-数组定义\"><a href=\"#9-1-数组定义\" class=\"headerlink\" title=\"9.1 数组定义\"></a>9.1 数组定义</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>int arr[10] &#x3D; {1,2,3,4,5,6,7,8,9,10}; &#x2F;&#x2F;定义一个整形数组，最多放十个元素，arr是数组名，可自行选择（但要遵循变量名命名规则，3.2中讲过）</p></blockquote>\n<h2 id=\"9-2-数组的下标\"><a href=\"#9-2-数组的下标\" class=\"headerlink\" title=\"9.2 数组的下标\"></a>9.2 数组的下标</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><ul>\n<li>数组的下标是从0开始的</li>\n<li>数组可以通过下标来访问的。</li>\n</ul></blockquote>\n<p>比如：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>int arr[10] &#x3D; {0}; &#x2F;&#x2F; 全部初始化为0</p></blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/bec400c02c6e47ceb162108126acdb4f.png\"></p>\n<h2 id=\"9-3-数组的使用\"><a href=\"#9-3-数组的使用\" class=\"headerlink\" title=\"9.3 数组的使用\"></a>9.3 数组的使用</h2><pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">#include &lt;stdio.h&gt;\n\n\nint main()&#123;\n\n    int arr[10] &#x3D; &#123;1,2,3,4,5,6,7,8,9,10&#125;;\n\n    for(int i &#x3D; 0;i &lt; 10; i++)&#123;\n\n\n        printf(&quot;%d &quot;,arr[i]);    \n    &#125;\n    \n    printf(&quot;\\n&quot;);\n    return 0;\n&#125;</code></pre>\n\n\n\n<p>运行结果如下：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/423678ef2efe47969c15aea2673e5b6d.png\"></p>\n<hr>\n<h1 id=\"10-操作符（简单介绍几个，后续进阶会讲，主要怕你们从入门到放弃啊\"><a href=\"#10-操作符（简单介绍几个，后续进阶会讲，主要怕你们从入门到放弃啊\" class=\"headerlink\" title=\"10. 操作符（简单介绍几个，后续进阶会讲，主要怕你们从入门到放弃啊\"></a>10. 操作符（简单介绍几个，后续进阶会讲，主要怕你们从入门到放弃啊</h1><h1 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a><img src=\"https://img-blog.csdnimg.cn/6b3ab25e329d49f6aa6743d7ade5ba2a.jpeg\"></h1><pre class=\"line-numbers language-none\"><code class=\"language-none\">算术操作符</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>+ </p>\n<p>- </p>\n<ul>\n<li>乘法</li>\n</ul>\n<p>&#x2F;  除法</p>\n<p>% 取模&#x2F;取余数    比如   5%2     这个表达式结果是1</p></blockquote>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">移位操作符</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><blockquote>\n<blockquote>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;&lt;</code></pre></blockquote>\n</blockquote>\n</blockquote>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">位操作符</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>&amp;     ^     |</p></blockquote>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">赋值操作符</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>&#x3D;     +&#x3D;    -&#x3D;   *&#x3D;   &#x2F;&#x3D;   &amp;&#x3D;    ^&#x3D;    |&#x3D;    &gt;&gt;&#x3D;    &lt;&lt;&#x3D;</p></blockquote>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">单目操作符</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>! 逻辑反操作</p>\n<ul>\n<li>负值</li>\n</ul>\n<ul>\n<li>正值</li>\n</ul>\n<p>&amp; 取地址</p>\n<p>sizeof 操作数的类型长度(以字节为单位)</p>\n<p>~ 对一个数的二进制按位取反</p>\n<p>– 前置、后置–</p>\n<p>++ 前置、后置++     比如：a++ 或者 ++a  那么a的值就在原来基础上+1</p>\n<ul>\n<li>间接访问操作符(解引用操作符)</li>\n</ul>\n<p>(类型) 强制类型转换</p></blockquote>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">关系操作符</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><blockquote>\n<p>大于</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>&#x3D; 大于等于</p></blockquote>\n<p>&lt; 小于</p>\n<p>&lt;&#x3D; 小于等于</p>\n<p>!&#x3D; 不等于</p>\n<p>&#x3D;&#x3D; 相等</p>\n</blockquote>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">逻辑操作符</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>&amp;&amp;  逻辑与    如： exp1 &amp;&amp; exp2    两边都为真才为真</p>\n<p>||     逻辑或    如： exp1 &amp;&amp; exp2    两边有一个真就为真</p></blockquote>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">条件操作符</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>exp1？ exp2 : exp3</p></blockquote>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">逗号表达式</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>exp1,exp2,exp3….expn</p></blockquote>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">下标引用、函数调用和结构成。</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>[ ]     ()      .      -&gt;</p></blockquote>\n<hr>\n<h1 id=\"11-常见关键字\"><a href=\"#11-常见关键字\" class=\"headerlink\" title=\"11. 常见关键字\"></a>11. 常见关键字</h1><pre class=\"line-numbers language-none\"><code class=\"language-none\">C90标准中，有32个关键字，分别是 （这么多 ![](https:&#x2F;&#x2F;img-blog.csdnimg.cn&#x2F;2038c491ad6248c48c67b9545646b35b.webp)![]( &quot;点击并拖拽以移动&quot;)**编辑**）（不要害怕！）</code></pre>\n\n<p><img src=\"https://img-blog.csdnimg.cn/f7a7b8a06f814e49b634dc49ce241cfa.gif\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>auto double int struct break  else  long  switch  case enum register typedef char extern return union const float short unsigned continue for signed void default goto sizeof volatile do if while static</p></blockquote>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">C99中37个，新增5个</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>inline 内联函数           restrict 用于限定指针        _Bool  定义布尔类型变量（1真0假）         _Complex  定义复数类型             _Imaginary 定义虚数类型</p></blockquote>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">C语言提供了丰富的关键字，这些关键字都是语言本身预先设定好的，用户自己是不能创造关键字的。\n\n\n\n    注:关键字，先介绍下面几个，后期遇到讲解。</code></pre>\n\n<h2 id=\"11-1-关键字-typedef\"><a href=\"#11-1-关键字-typedef\" class=\"headerlink\" title=\"11.1 关键字 typedef\"></a>11.1 关键字 typedef</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>typedef顾名思义就是类型定义，这里可以理解为类型重命名</p></blockquote>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">看栗子🌰</code></pre>\n\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">&#x2F;&#x2F;将unsigned int 重命名为uint_32, 所以uint_32也是一个类型名 \n\ntypedef unsigned int uint_32;\n\nint main()&#123;\n\n    &#x2F;&#x2F;观察num1和num2,这两个变量的类型是一样的 \n    unsigned int num1 &#x3D; 0;\n    uint_32 num2 &#x3D; 0;\n\n    return 0;\n&#125;</code></pre>\n\n\n\n<h2 id=\"11-2关键字static\"><a href=\"#11-2关键字static\" class=\"headerlink\" title=\"11.2关键字static\"></a>11.2关键字static</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>在C语言中: static是用来修饰变量和函数的</p>\n<ol>\n<li>修饰局部变量-称为静态局部变量</li>\n<li>修饰全局变量-称为静态全局变量</li>\n<li>修饰函数-称为静态函数</li>\n</ol></blockquote>\n<h3 id=\"11-2-1-修饰局部变量\"><a href=\"#11-2-1-修饰局部变量\" class=\"headerlink\" title=\"11.2.1 修饰局部变量\"></a>11.2.1 修饰局部变量</h3><pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">&#x2F;&#x2F;代码一\n#include &lt;stdio.h&gt;\n\nvoid test()&#123;\n\n    int i &#x3D; 0;\n    i++;\n    printf(&quot;%d &quot;,i);\n\n&#125;\n\nint main()&#123;\n\n\n    for(int k &#x3D; 0; k&lt; 10; k++)&#123;\n\n        test();\n\n    &#125;\n    return 0;\n&#125;\n\n\n&#x2F;&#x2F;代码二\n\n#include &lt;stdio.h&gt;\n\nvoid test()&#123;\n\n    static int i &#x3D; 0;\n    i++;\n\n    printf(&quot;%d &quot;,i);\n\n&#125;\n\nint main()&#123;\n\n\n    for(int k &#x3D; 0; k&lt; 10; k++)&#123;\n\n        test();\n\n    &#125;\n\n    return 0;\n&#125;\n\n&#x2F;&#x2F;代码一输出 1 1 1 1 1 1 1 1 1 1\n&#x2F;&#x2F;代码二输出 1 2 3 4 5 6 7 8 9 10\n\n&#x2F;&#x2F;代码三 如果我们在主函数内是有 i行不行呢\n\n#include &lt;stdio.h&gt;\n\nvoid test()&#123;\n\n    static int i &#x3D; 0;\n    i++;\n\n    printf(&quot;%d &quot;,i);\n\n&#125;\n\nint main()&#123;\n\n\n    for(int k &#x3D; 0; k&lt; 10; k++)&#123;\n\n        test();\n\n    &#125;\n    \n    printf(&quot;%d\\n&quot;,i); &#x2F;&#x2F;这是不行的，i的作用域依然是局部的智能在test函数内部使用\n\n    return 0;\n&#125;</code></pre>\n\n\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">对比代码1和代码2的效果理解static修饰局部变量的意义。</code></pre>\n\n<p>结论:</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><pre class=\"line-numbers language-none\"><code class=\"language-none\">static修饰局部变量，只定义一次。 并且出代码块也不会被释放。（所以修饰局部变量，相当于将该局部变量生命周期变为整个工程期间，但是作用域不变。依然只能在代码块内使用）</code></pre></blockquote>\n<h3 id=\"11-2-2-修饰全局变量\"><a href=\"#11-2-2-修饰全局变量\" class=\"headerlink\" title=\"11.2.2 修饰全局变量\"></a>11.2.2 修饰全局变量</h3><pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">&#x2F;&#x2F;代码一\n\n文件add.c\n\nint g_val &#x3D; 10;\n\n文件test.c\n\n#include &lt;stdio.h&gt;\n\nint main()&#123;\n\n    printf(&quot;%d\\n&quot;,g_val); &#x2F;&#x2F;可行\n\n&#125;\n\n\n&#x2F;&#x2F;代码二\n\n文件add.c\n\nstatic int g_val &#x3D; 10;\n\n文件test.c\n\n#include &lt;stdio.h&gt;\n\nint main()&#123;\n\n    printf(&quot;%d\\n&quot;,g_val); &#x2F;&#x2F;不可行\n\n&#125;</code></pre>\n\n\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">代码1正常，代码2在编译的时候会出现连接性错误。</code></pre>\n\n<p>结论:</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>一个全局变量被static修饰，使得这个全局变量只能在本源文件内使用，不能在其他源文件内使用。</p></blockquote>\n<h3 id=\"11-2-3-修饰函数\"><a href=\"#11-2-3-修饰函数\" class=\"headerlink\" title=\"11.2.3 修饰函数\"></a>11.2.3 修饰函数</h3><pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">&#x2F;&#x2F;代码一\n\n文件add.c\n\nint add(int a, int b)&#123;\n\n    return a + b;\n&#125;\n\n文件test.c\n\n#include &lt;stdio.h&gt;\n\nint main()&#123;\n\n    printf(&quot;%d\\n&quot;,add(5,8)) &#x2F;&#x2F;可行\n\n&#125;\n\n\n&#x2F;&#x2F;代码二\n\n文件add.c\n\nstatic int add(int a, int b)&#123;\n\n    return a + b;\n&#125;\n\n文件test.c\n\n#include &lt;stdio.h&gt;\n\nint main()&#123;\n\n    printf(&quot;%d\\n&quot;,add(5,8)) &#x2F;&#x2F;不可行\n\n&#125;</code></pre>\n\n\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">代码1正常，代码2在编译的时候会出现连接性错误.</code></pre>\n\n<p>结论:</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>函数被static修饰，使得这个函数只能在本源文件内使用，不能在其他源文件内使用。</p></blockquote>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">其他关键字后续C语言进阶讲</code></pre>\n\n<p><img src=\"https://img-blog.csdnimg.cn/fde749775d8b41e3be2bc24fe3aa8b82.webp\"></p>\n<hr>\n<h1 id=\"12-define-定义常量和宏\"><a href=\"#12-define-定义常量和宏\" class=\"headerlink\" title=\"12. #define 定义常量和宏\"></a>12. #define 定义常量和宏</h1><p>先看栗子🌰</p>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">&#x2F;&#x2F;define 定义标识符常量\n\n#define MAX 1000 &#x2F;&#x2F;MAX是常量名  1000是值（注意语句后不要加 ; 因为看到很多初学者加 ; 特意提一句）\n\n&#x2F;&#x2F;define定义宏\n\n#define ADD(x, y) ((x) + (y))\n\n#include &lt;stdio.h&gt;\n\nint main()&#123;\n\n    int arr[MAX] &#x3D; &#123;0&#125;; &#x2F;&#x2F; 这是可行的，因为MAX是常量\n\n    int sum &#x3D; ADD(2,3);\n    printf(&quot;sum &#x3D; %d\\n&quot;,sum); &#x2F;&#x2F; 打印5\n\n    sum &#x3D; 10 * ADD(2,3);\n    printf(&quot;sum &#x3D; %d\\n&quot;,sum); &#x2F;&#x2F; 打印50\n\n    return 0;\n&#125;</code></pre>\n\n\n\n<hr>\n<h1 id=\"13-指针\"><a href=\"#13-指针\" class=\"headerlink\" title=\"13. 指针\"></a>13. 指针</h1><h2 id=\"13-1-内存\"><a href=\"#13-1-内存\" class=\"headerlink\" title=\"13.1 内存\"></a>13.1 内存</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><pre class=\"line-numbers language-none\"><code class=\"language-none\">内存是电脑上特别重要的存储器，计算机中程序的运行都是在内存中进行的 。所以为了有效的使用内存，就把内存划分成一个个小的内存单元，每个内存单元的大小是 **1个字节** 。为了能够有效的访问到内存的每个单元，就给内存单元进行了编号，这些编号被称为该**内存单元的地址。**</code></pre></blockquote>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">**看图：**</code></pre>\n\n<p><img src=\"https://img-blog.csdnimg.cn/e5ee8f9e0c9249188032d31feda94dc5.png\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">所有变量本质都是要在内存的某个位置开辟空间的！（每个内存单元都有地址，所以变量也是有地址的）假设我们定义一个int型 变量a。</code></pre>\n\n<p><img src=\"https://img-blog.csdnimg.cn/03542991cc254bfabefd6b9b3eb6b659.png\"></p>\n<p>取出变量地址如下：</p>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">#include &lt;stdio.h&gt;\n\nint mian()&#123;\n\n    int a &#x3D; 0;\n\n    &amp;a; &#x2F;&#x2F;这就是将a的地址取出来 ,int的大小是4个字节，取地址只取首个字节的地址\n\n    printf(&quot;%p\\n&quot;,&amp;a); &#x2F;&#x2F;%p 是以地址的形式打印\n\n    return 0;\n\n&#125;</code></pre>\n\n\n\n<p>那么地址如何存储呢？（这个时候我们就需要指针变量）</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>int a &#x3D; 10;</p>\n<p>int *p; &#x2F;&#x2F;p为一个整形指针变量</p>\n<p>p &#x3D; &amp;a;</p></blockquote>\n<p>指针使用栗子🌰</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>int a &#x3D;10;</p>\n<p>int *p;</p>\n<p>p &#x3D; &amp;a;</p>\n<p>*p &#x3D; 20; &#x2F;&#x2F;这里将a的值改为20</p></blockquote>\n<p>以整形指针举例，可以推广到其他类型，如:</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>#include &lt;stdio.h&gt;</p>\n<p>int main(){</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">char ch &#x3D; &#39;a&#39;;\n\n\n\n char * p &#x3D; &amp;ch;\n\n\n\n *p &#x3D; &#39;q&#39;;  &#x2F;&#x2F;将char型变量 ch的值改为q\n\n\n\n return 0;</code></pre>\n\n<p>}</p></blockquote>\n<h2 id=\"13-2-指针变量的大小\"><a href=\"#13-2-指针变量的大小\" class=\"headerlink\" title=\"13.2 指针变量的大小\"></a>13.2 指针变量的大小</h2><pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">&#x2F;&#x2F;指针变量的大小取决于地址的大小 &#x2F;&#x2F;32位平台下地址是32个bit位(即4个字节) &#x2F;&#x2F;64位平台下地址是64个bit位(即8个字节)\n#include &lt;stdio.h&gt;\n\nint main() &#123;\n    printf(&quot;%d\\n&quot;, sizeof(char *));    4&#x2F;8\n    printf(&quot;%d\\n&quot;, sizeof(short *));   4&#x2F;8\n    printf(&quot;%d\\n&quot;, sizeof(int *));     4&#x2F;8\n    printf(&quot;%d\\n&quot;, sizeof(double *));  4&#x2F;8\n    return 0;\n&#125;</code></pre>\n\n\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">**    结论:指针大小在32位平台是4个字节，64位平台是8个字节。 **</code></pre>\n\n<hr>\n<h1 id=\"14-结构体\"><a href=\"#14-结构体\" class=\"headerlink\" title=\"14. 结构体\"></a>14. 结构体</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><pre class=\"line-numbers language-none\"><code class=\"language-none\">结构体是C语言中特别重要的知识点，结构体使得C语言有能力描述复杂类型。比如描述学生，学生包含: 名字+年龄+性别+学号 这几项信息。这里只能使用结构体来描述了。</code></pre></blockquote>\n<p>例如:</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>struct Stu{</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">char name[20];  &#x2F;&#x2F; 姓名\n\n\n\n int age;              &#x2F;&#x2F;年龄          \n\n\n\n char sex[5];       &#x2F;&#x2F;性别 \n\n\n\n char id[20];        &#x2F;&#x2F;学号</code></pre>\n\n<p>};</p></blockquote>\n<p>结构体的初始化 ,看代码</p>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">#include &lt;stdio.h&gt;\n\n\nstruct Stu&#123;\n\n     char name[20];  &#x2F;&#x2F; 姓名\n\n     int age;              &#x2F;&#x2F;年龄          \n\n     char sex[5];       &#x2F;&#x2F;性别 \n\n     char id[20];        &#x2F;&#x2F;学号\n\n&#125;;\n\n\nint main()&#123;\n\n    &#x2F;&#x2F;结构体变量的定义及初始化\n    struct Stu s &#x3D; &#123;&quot;蔡徐坤&quot;,20,男,&quot;20221018&quot;&#125;;\n\n    &#x2F;&#x2F;打印结构体变量成员     .为结构体成员访问操作符\n    printf(&quot;姓名：%s\\n 年龄：%d\\n 性别：%s\\n 学号：%s\\n&quot;,s.name,s.age,s.sex,s.id);\n\n\n    &#x2F;&#x2F;结构体指针\n\n    struct Stu *ps &#x3D; &amp;s;\n    &#x2F;&#x2F;-&gt; 操作符\n    printf(&quot;姓名：%s\\n 年龄：%d\\n 性别：%s\\n 学号：%s\\n&quot;,ps-&gt;name,ps-&gt;age,ps-&gt;sex,ps-&gt;id);\n\n\n\n\n\n&#125;</code></pre>\n\n\n\n<hr>\n<p><img src=\"https://img-blog.csdnimg.cn/52da6e990cb44cb1bf80c987ed063929.jpeg\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><pre class=\"line-numbers language-none\"><code class=\"language-none\">🎬如果你刚步入计算机世界，并且认真看到这里，那么希望本文能对你有所帮助，如果你觉得文章不错的话，\n可以关注博主，博主后续会不断更新更优质的文章来分享博主的学习心得，也希望能够让在编程路上遇到困难的小伙伴获得一些帮助。</code></pre></blockquote>\n","text":" 🐰作者简介：一位普通高校的在校学生，致力于提高自己的编程能力。 🍌个人主页：[比昨天强一點的博客_CSDN博客-领域博主](https:&#x2F;&#x2F;c-p-p.blog.csdn.net&#x2F; &quot;比昨天强一點的博客_CSDN博客-领域博主&quot;...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"14 mins."},"categories":[],"tags":[{"name":"C语言","slug":"C语言","count":3,"path":"api/tags/C语言.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-%E4%BB%80%E4%B9%88%E6%98%AFC%E8%AF%AD%E8%A8%80\"><span class=\"toc-text\">1.什么是C语言</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-%E7%AC%AC%E4%B8%80%E4%B8%AAC%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F\"><span class=\"toc-text\">2.第一个C语言程序</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#3-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">3.数据类型</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#3-%E5%8F%98%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F\"><span class=\"toc-text\">3.变量和常量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-1%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F%E7%9A%84%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">3.1定义变量的方法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-2%E5%8F%98%E9%87%8F%E7%9A%84%E5%91%BD%E5%90%8D\"><span class=\"toc-text\">3.2变量的命名</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-3-%E5%8F%98%E9%87%8F%E7%9A%84%E5%88%86%E7%B1%BB\"><span class=\"toc-text\">3.3 变量的分类</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-4%E5%8F%98%E9%87%8F%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">3.4变量的使用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-4-%E5%8F%98%E9%87%8F%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%92%8C%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F\"><span class=\"toc-text\">3.4 变量的作用域和生命周期</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-5%E5%B8%B8%E9%87%8F\"><span class=\"toc-text\">3.5常量</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#4-%E5%AD%97%E7%AC%A6%E4%B8%B2-%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6-%E6%B3%A8%E9%87%8A\"><span class=\"toc-text\">4. 字符串+转义字符+注释</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-1-%E5%AD%97%E7%AC%A6%E4%B8%B2\"><span class=\"toc-text\">4.1 字符串</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-2%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6\"><span class=\"toc-text\">4.2转义字符</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#5-%E6%B3%A8%E9%87%8A\"><span class=\"toc-text\">5. 注释</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#6-%E9%80%89%E6%8B%A9%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">6. 选择语句</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#7-%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">7.循环语句</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#8-%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">8.函数</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#9-%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">9.数组</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#9-1-%E6%95%B0%E7%BB%84%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\">9.1 数组定义</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#9-2-%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%8B%E6%A0%87\"><span class=\"toc-text\">9.2 数组的下标</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#9-3-%E6%95%B0%E7%BB%84%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">9.3 数组的使用</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#10-%E6%93%8D%E4%BD%9C%E7%AC%A6%EF%BC%88%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D%E5%87%A0%E4%B8%AA%EF%BC%8C%E5%90%8E%E7%BB%AD%E8%BF%9B%E9%98%B6%E4%BC%9A%E8%AE%B2%EF%BC%8C%E4%B8%BB%E8%A6%81%E6%80%95%E4%BD%A0%E4%BB%AC%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%83%E5%95%8A\"><span class=\"toc-text\">10. 操作符（简单介绍几个，后续进阶会讲，主要怕你们从入门到放弃啊</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\"><span class=\"toc-text\"></span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#11-%E5%B8%B8%E8%A7%81%E5%85%B3%E9%94%AE%E5%AD%97\"><span class=\"toc-text\">11. 常见关键字</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#11-1-%E5%85%B3%E9%94%AE%E5%AD%97-typedef\"><span class=\"toc-text\">11.1 关键字 typedef</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#11-2%E5%85%B3%E9%94%AE%E5%AD%97static\"><span class=\"toc-text\">11.2关键字static</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#11-2-1-%E4%BF%AE%E9%A5%B0%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">11.2.1 修饰局部变量</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#11-2-2-%E4%BF%AE%E9%A5%B0%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">11.2.2 修饰全局变量</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#11-2-3-%E4%BF%AE%E9%A5%B0%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">11.2.3 修饰函数</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#12-define-%E5%AE%9A%E4%B9%89%E5%B8%B8%E9%87%8F%E5%92%8C%E5%AE%8F\"><span class=\"toc-text\">12. #define 定义常量和宏</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#13-%E6%8C%87%E9%92%88\"><span class=\"toc-text\">13. 指针</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#13-1-%E5%86%85%E5%AD%98\"><span class=\"toc-text\">13.1 内存</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#13-2-%E6%8C%87%E9%92%88%E5%8F%98%E9%87%8F%E7%9A%84%E5%A4%A7%E5%B0%8F\"><span class=\"toc-text\">13.2 指针变量的大小</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#14-%E7%BB%93%E6%9E%84%E4%BD%93\"><span class=\"toc-text\">14. 结构体</span></a></li></ol>","author":{"name":"混游","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/15c077c833504a8d94efd224be52a093.png","link":"/","description":"一位正在重塑知识的技术人 <br /> @ <b>座右铭：比昨天强一点</b>","socials":{"github":"https://github.com/xuruijiang","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://m.weibo.cn/","zhihu":"https://www.zhihu.com/people/ye-he-52-45","csdn":"https://c-p-p.blog.csdn.net/","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/374838922?spm_id_from=333.1007.0.0"}}}},"mapped":true,"prev_post":{"title":"浮点型","uid":"7f367b0fa41ebe2c6c61fe40a4e92fbd","slug":"浮点型","date":"2023-02-18T13:40:31.000Z","updated":"2023-04-19T08:17:25.797Z","comments":true,"path":"api/articles/浮点型.json","keywords":null,"cover":"/photos/blog3.png","text":" 🐰作者简介：一位普通高校的在校学生，致力于提高自己的编程能力。 🍌个人主页：[比昨天强一點的博客_CSDN博客-领域博主](https:&#x2F;&#x2F;c-p-p.blog.csdn.net&#x2F; &quot;比昨天强一點的博客_CSDN博客-领域博主&quot;...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"C语言","slug":"C语言","count":3,"path":"api/tags/C语言.json"},{"name":"数据类型","slug":"数据类型","count":1,"path":"api/tags/数据类型.json"}],"author":{"name":"混游","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/15c077c833504a8d94efd224be52a093.png","link":"/","description":"一位正在重塑知识的技术人 <br /> @ <b>座右铭：比昨天强一点</b>","socials":{"github":"https://github.com/xuruijiang","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://m.weibo.cn/","zhihu":"https://www.zhihu.com/people/ye-he-52-45","csdn":"https://c-p-p.blog.csdn.net/","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/374838922?spm_id_from=333.1007.0.0"}}}},"feature":true},"next_post":{}}